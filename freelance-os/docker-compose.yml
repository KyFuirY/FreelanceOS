version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: freelance-os-postgres
    environment:
      POSTGRES_DB: freelance_os
      POSTGRES_USER: freelance
      POSTGRES_PASSWORD: freelance_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U freelance -d freelance_os"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: freelance-os-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: freelance-os-backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://freelance:freelance_password@postgres:5432/freelance_os
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./backend/package.json

  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: freelance-os-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:3000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./frontend/package.json

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: freelance-os-network